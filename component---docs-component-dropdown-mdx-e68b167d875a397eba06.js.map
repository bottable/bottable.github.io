{"version":3,"sources":["webpack:///../docs/component/dropdown.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Menu","Dropdown","Text","Playground","menu","Item","trigger","isMDXComponent"],"mappings":"ggBAQO,IAAMA,EAAe,Q,6MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,UAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,YADR,YAGA,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,8XAAiYC,SAAO,GACzaJ,QACAH,kBACAQ,SACAC,aACAC,SACAC,gBANya,gBAOzaX,IAPya,EAQzaH,eARya,GASxaO,QAAQ,eACZ,WACK,IAAMQ,EAAO,YAAC,IAAD,CAAMR,QAAQ,QAC3B,YAAC,IAAKS,KAAN,KACE,YAAC,IAAD,CAAMT,QAAQ,QAAd,aAEF,YAAC,IAAKS,KAAN,KACE,YAAC,IAAD,CAAMT,QAAQ,QAAd,aAEF,YAAC,IAAKS,KAAN,KACE,YAAC,IAAD,CAAMT,QAAQ,QAAd,cAGF,OAAO,YAAC,IAAD,CAAUQ,KAAMA,EAAME,QAAS,QAASV,QAAQ,YACvD,YAAC,IAAD,CAAMA,QAAQ,QAAd,kBAIJ,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,kYAAqYC,SAAO,GAC7aJ,QACAH,kBACAQ,SACAC,aACAC,SACAC,gBAN6a,gBAO7aX,IAP6a,EAQ7aH,eAR6a,GAS5aO,QAAQ,eACZ,WACK,IAAMQ,EAAO,YAAC,IAAD,CAAMR,QAAQ,QAC3B,YAAC,IAAKS,KAAN,KACE,YAAC,IAAD,CAAMT,QAAQ,QAAd,aAEF,YAAC,IAAKS,KAAN,KACE,YAAC,IAAD,CAAMT,QAAQ,QAAd,aAEF,YAAC,IAAKS,KAAN,KACE,YAAC,IAAD,CAAMT,QAAQ,QAAd,cAGF,OAAO,YAAC,IAAD,CAAUQ,KAAMA,EAAME,QAAS,QAASV,QAAQ,YACvD,4CAIJ,iBAAQ,CACN,GAAM,0BADR,0BAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,wPAA2PC,SAAO,GACnSJ,QACAH,kBACAQ,SACAC,aACAC,SACAC,gBANmS,gBAOnSX,IAPmS,EAQnSH,eARmS,GASlSO,QAAQ,eACZ,WAOK,OAAO,YAAC,IAAD,CAAUQ,KANJ,kBAAM,YAAC,IAAD,CAAMR,QAAQ,QACjC,YAAC,IAAKS,KAAN,KACE,YAAC,IAAD,CAAMT,QAAQ,QAAd,eAI2BU,QAAS,QAASV,QAAQ,YACvD,YAAC,IAAD,CAAMA,QAAQ,QAAd,wB,2MAQRH,EAAWc,gBAAiB","file":"component---docs-component-dropdown-mdx-e68b167d875a397eba06.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/alwu/Desktop/new coding stuff/fiber/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Menu, Dropdown, Text } from 'fiber';\nimport { Playground } from 'docz';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"dropdown\"\n    }}>{`Dropdown`}</h1>\n    <h2 {...{\n      \"id\": \"hover\"\n    }}>{`Hover`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const menu = (\\n    <Menu>\\n      <Menu.Item>\\n        <Text> Item 1 </Text>\\n      </Menu.Item>\\n      <Menu.Item>\\n        <Text> Item 2 </Text>\\n      </Menu.Item>\\n      <Menu.Item>\\n        <Text> Item 3 </Text>\\n      </Menu.Item>\\n    </Menu>\\n  )\\n  return (\\n    <Dropdown menu={menu} trigger={\\'hover\\'}>\\n      <Text> Hover Me </Text>\\n    </Dropdown>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Menu,\n      Dropdown,\n      Text,\n      Playground,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const menu = <Menu mdxType=\"Menu\">\n        <Menu.Item>\n          <Text mdxType=\"Text\"> Item 1 </Text>\n        </Menu.Item>\n        <Menu.Item>\n          <Text mdxType=\"Text\"> Item 2 </Text>\n        </Menu.Item>\n        <Menu.Item>\n          <Text mdxType=\"Text\"> Item 3 </Text>\n        </Menu.Item>\n      </Menu>;\n        return <Dropdown menu={menu} trigger={'hover'} mdxType=\"Dropdown\">\n        <Text mdxType=\"Text\"> Hover Me </Text>\n      </Dropdown>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"click\"\n    }}>{`Click`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const menu = (\\n    <Menu>\\n      <Menu.Item>\\n        <Text> Item 1 </Text>\\n      </Menu.Item>\\n      <Menu.Item>\\n        <Text> Item 2 </Text>\\n      </Menu.Item>\\n      <Menu.Item>\\n        <Text> Item 3 </Text>\\n      </Menu.Item>\\n    </Menu>\\n  )\\n  return (\\n    <Dropdown menu={menu} trigger={\\'click\\'}>\\n      <button> Click Me </button>\\n    </Dropdown>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Menu,\n      Dropdown,\n      Text,\n      Playground,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const menu = <Menu mdxType=\"Menu\">\n        <Menu.Item>\n          <Text mdxType=\"Text\"> Item 1 </Text>\n        </Menu.Item>\n        <Menu.Item>\n          <Text mdxType=\"Text\"> Item 2 </Text>\n        </Menu.Item>\n        <Menu.Item>\n          <Text mdxType=\"Text\"> Item 3 </Text>\n        </Menu.Item>\n      </Menu>;\n        return <Dropdown menu={menu} trigger={'click'} mdxType=\"Dropdown\">\n        <button> Click Me </button>\n      </Dropdown>;\n      }}\n    </Playground>\n    <h3 {...{\n      \"id\": \"use-function-to-render\"\n    }}>{`Use Function to render`}</h3>\n    <Playground __position={2} __code={'() => {\\n  const menu = () => (\\n    <Menu>\\n      <Menu.Item>\\n        <Text> Item 1 </Text>\\n      </Menu.Item>\\n    </Menu>\\n  )\\n  return (\\n    <Dropdown menu={menu} trigger={\\'hover\\'}>\\n      <Text> Hover Me </Text>\\n    </Dropdown>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Menu,\n      Dropdown,\n      Text,\n      Playground,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const menu = () => <Menu mdxType=\"Menu\">\n        <Menu.Item>\n          <Text mdxType=\"Text\"> Item 1 </Text>\n        </Menu.Item>\n      </Menu>;\n\n        return <Dropdown menu={menu} trigger={'hover'} mdxType=\"Dropdown\">\n        <Text mdxType=\"Text\"> Hover Me </Text>\n      </Dropdown>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}