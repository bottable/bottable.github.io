{"version":3,"sources":["webpack:///../docs/component/divider.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","Divider","__position","__code","__scope","Text","Paragraph","Playground","Props","fontSize","orientation","type","isMDXComponent"],"mappings":"ggBAQO,IAAMA,EAAe,Q,4MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,WADR,WAGA,YAAC,IAAD,CAAOC,GAAIC,IAASF,QAAQ,UAC5B,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,mwEAA0wEC,SAAO,GAClzEN,QACAH,kBACAM,YACAI,SACAC,cACAC,eACAC,WAPkzE,gBAQlzEb,IARkzE,EASlzEH,eATkzE,GAUjzEO,QAAQ,cACb,YAAC,IAAD,CAAWA,QAAQ,aAAnB,wsBAYA,YAAC,IAAD,CAASU,SAAU,GAAIV,QAAQ,WAA/B,cACA,YAAC,IAAD,CAAWA,QAAQ,aAAnB,gXAOA,YAAC,IAAD,CAASW,YAAY,OAAOX,QAAQ,WAApC,iBACA,YAAC,IAAD,CAAWA,QAAQ,aAAnB,2WAOA,YAAC,IAAD,CAASW,YAAY,QAAQX,QAAQ,WAArC,qBACA,YAAC,IAAD,CAAWA,QAAQ,aAAnB,iaAQA,YAAC,IAAD,CAASA,QAAQ,YACjB,uBACE,YAAC,IAAD,CAAMA,QAAQ,QAAd,aACA,YAAC,IAAD,CAASY,KAAK,WAAWZ,QAAQ,YACjC,YAAC,IAAD,CAAMA,QAAQ,QAAd,sB,0MAOJH,EAAWgB,gBAAiB","file":"component---docs-component-divider-mdx-4867eef2e0457f2c92a2.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/alwu/Desktop/new coding stuff/fiber/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Divider, Text, Paragraph } from 'fiber';\nimport { Playground, Props } from 'docz';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"divider\"\n    }}>{`Divider`}</h1>\n    <Props of={Divider} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic Usage`}</h2>\n    <Playground __position={1} __code={'<Paragraph>\\n  Generating random paragraphs can be an excellent way for writers to get\\n  their creative flow going at the beginning of the day. The writer has no\\n  idea what topic the random paragraph will be about when it appears. This\\n  forces the writer to use creativity to complete one of three common writing\\n  challenges. The writer can use the paragraph as the first one of a short\\n  story and build upon it. A second option is to use the random paragraph\\n  somewhere in a short story they create. The third option is to have the\\n  random paragraph be the ending paragraph in a short story. No matter which\\n  of these challenges is undertaken, the writer is forced to use creativity to\\n  incorporate the paragraph into their writing.\\n</Paragraph>\\n<Divider fontSize={32}>horizontal</Divider>\\n<Paragraph>\\n  A random paragraph can also be an excellent way for a writer to tackle\\n  writers\\' block. Writing block can often happen due to being stuck with a\\n  current project that the writer is trying to complete. By inserting a\\n  completely random paragraph from which to begin, it can take down some of\\n  the issues that may have been causing the writers\\' block in the first place.\\n</Paragraph>\\n<Divider orientation=\\\"left\\\">left oriented</Divider>\\n<Paragraph>\\n  Another productive way to use this tool to begin a daily writing routine.\\n  One way is to generate a random paragraph with the intention to try to\\n  rewrite it while still keeping the original meaning. The purpose here is to\\n  just get the writing started so that when the writer goes onto their day\\'s\\n  writing projects, words are already flowing from their fingers.\\n</Paragraph>\\n<Divider orientation=\\\"right\\\">right orientation</Divider>\\n<Paragraph>\\n  Another writing challenge can be to take the individual sentences in the\\n  random paragraph and incorporate a single sentence from that into a new\\n  paragraph to create a short story. Unlike the random sentence generator, the\\n  sentences from the random paragraph will have some connection to one another\\n  so it will be a bit different. You also won\\'t know exactly how many\\n  sentences will appear in the random paragraph.\\n</Paragraph>\\n<Divider />\\n<div>\\n  <Text>LEFT TEXT</Text>\\n  <Divider type=\\\"vertical\\\" />\\n  <Text>RIGHT TEXT</Text>\\n</div>'} __scope={{\n      props,\n      DefaultLayout,\n      Divider,\n      Text,\n      Paragraph,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Paragraph mdxType=\"Paragraph\">\n    Generating random paragraphs can be an excellent way for writers to get\n    their creative flow going at the beginning of the day. The writer has no\n    idea what topic the random paragraph will be about when it appears. This\n    forces the writer to use creativity to complete one of three common writing\n    challenges. The writer can use the paragraph as the first one of a short\n    story and build upon it. A second option is to use the random paragraph\n    somewhere in a short story they create. The third option is to have the\n    random paragraph be the ending paragraph in a short story. No matter which\n    of these challenges is undertaken, the writer is forced to use creativity to\n    incorporate the paragraph into their writing.\n  </Paragraph>\n  <Divider fontSize={32} mdxType=\"Divider\">horizontal</Divider>\n  <Paragraph mdxType=\"Paragraph\">\n    A random paragraph can also be an excellent way for a writer to tackle\n    writers' block. Writing block can often happen due to being stuck with a\n    current project that the writer is trying to complete. By inserting a\n    completely random paragraph from which to begin, it can take down some of\n    the issues that may have been causing the writers' block in the first place.\n  </Paragraph>\n  <Divider orientation='left' mdxType=\"Divider\">left oriented</Divider>\n  <Paragraph mdxType=\"Paragraph\">\n    Another productive way to use this tool to begin a daily writing routine.\n    One way is to generate a random paragraph with the intention to try to\n    rewrite it while still keeping the original meaning. The purpose here is to\n    just get the writing started so that when the writer goes onto their day's\n    writing projects, words are already flowing from their fingers.\n  </Paragraph>\n  <Divider orientation='right' mdxType=\"Divider\">right orientation</Divider>\n  <Paragraph mdxType=\"Paragraph\">\n    Another writing challenge can be to take the individual sentences in the\n    random paragraph and incorporate a single sentence from that into a new\n    paragraph to create a short story. Unlike the random sentence generator, the\n    sentences from the random paragraph will have some connection to one another\n    so it will be a bit different. You also won't know exactly how many\n    sentences will appear in the random paragraph.\n  </Paragraph>\n  <Divider mdxType=\"Divider\" />\n  <div>\n    <Text mdxType=\"Text\">LEFT TEXT</Text>\n    <Divider type='vertical' mdxType=\"Divider\" />\n    <Text mdxType=\"Text\">RIGHT TEXT</Text>\n  </div>\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}